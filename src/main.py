import os
from random import randint

import requests
from dotenv import load_dotenv
from telebot import TeleBot, types

load_dotenv()


class RecipeBot:
    def __init__(self):
        self.token = os.getenv('RECIPE_BOT_TOKEN')
        self.chat_id = os.getenv('MY_CHAT_ID')
        self.recipes_url = 'https://recipe-api.sytes.net/api/recipe/recipes/'
        self.bot = TeleBot(token=self.token)
        self.previous_recipe = None
        self._setup_handlers()

    def _setup_handlers(self):
        self.bot.message_handler(commands=['start'])(self.greet_user)
        self.bot.message_handler(commands=['–†–µ—Ü–µ–ø—Ç'])(self.send_recipe)

    @staticmethod
    def create_buttons():
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        get_random_recipe = types.KeyboardButton('/–†–µ—Ü–µ–ø—Ç')
        keyboard.add(get_random_recipe)
        return keyboard

    def greet_user(self, message):
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        keyboard = self.create_buttons()
        chat = message.chat
        self.bot.send_message(
            chat_id=chat.id,
            text='–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç —Å –∏–¥–µ—è–º–∏ –ø—Ä–æ—Å—Ç—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤',
            reply_markup=keyboard,
        )

    def get_random_recipe_data(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ API"""
        response = requests.get(self.recipes_url).json()
        total_recipes = len(response)

        if total_recipes <= 1:
            return response[0]

        while True:
            random_id = randint(0, total_recipes - 1)
            recipe = response[random_id]
            if recipe['title'] != self.previous_recipe:
                self.previous_recipe = recipe['title']
                return recipe

    @staticmethod
    def format_ingredients(ingredients):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è"""
        return '\n'.join(
            [
                f'- {ingredient["name"]}: {ingredient["amount"]} '
                f'{ingredient["measurement_unit"]}'
                for ingredient in ingredients
            ]
        )

    @staticmethod
    def format_recipe_details(recipe):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–µ—Ü–µ–ø—Ç–µ"""
        cooking_time = recipe['cooking_time']
        description = recipe['description']
        ingredients = RecipeBot.format_ingredients(
            recipe['ingredients_display']
        )

        return (
            f'‚è≥ *–í—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏:* {cooking_time} –º–∏–Ω—É—Ç\n'
            f'üç™ *–û–ø–∏—Å–∞–Ω–∏–µ:* {description}\n\n'
            f'üõí *–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:* \n{ingredients}'
        )

    def send_recipe(self, message):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        chat = message.chat
        random_recipe = self.get_random_recipe_data()
        title = random_recipe['title']

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ä–µ—Ü–µ–ø—Ç–∞
        self.bot.send_photo(
            chat_id=chat.id,
            photo=random_recipe['image'],
            caption=f'üçΩÔ∏è *–†–µ—Ü–µ–ø—Ç –¥–Ω—è:* {title}',
            parse_mode='Markdown',
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ, –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        self.bot.send_message(
            chat_id=chat.id,
            text=self.format_recipe_details(random_recipe),
            parse_mode='Markdown',
        )

    def run(self):
        self.bot.polling()


if __name__ == '__main__':
    recipe_bot = RecipeBot()
    recipe_bot.run()
